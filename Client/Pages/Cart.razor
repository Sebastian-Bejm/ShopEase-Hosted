@page "/cart"
@using ShopEase.Shared.Models
@using ShopEase.Shared.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject CartService CartService

<h3 class="mb-4">Your Cart</h3>

<AuthorizeView>
    <Authorized>
        @if (!CartService.CartItems.Any())
        {
            <p>Your cart is empty.</p>
        }
        else
        {
            <div class="cart-grid">
                @foreach (var item in CartService.CartItems)
                {
                    var product = item.Product;
                    var quantity = item.Quantity;
                    <div class="cart-item" @key="item.ProductID">
                        <div class="cart-item-header">
                            <h5 class="fw-semibold">@product.Name</h5>
                            <span class="text-muted">@product.Category</span>
                        </div>
                        <div class="cart-item-body">
                            <div class="cart-detail">
                                <strong>Price:</strong> <span class="text-success">$@product.Price</span>
                            </div>
                            <div class="cart-detail">
                                <strong>Quantity:</strong>
                                <input type="number"
                                       min="0"
                                       value="@quantity"
                                       @onchange="e => UpdateQuantity(item.ProductID, e.Value?.ToString())"
                                       class="form-control form-control-sm quantity-input"
                                       aria-label="Quantity for @product.Name" />
                            </div>
                            <div class="cart-actions">
                                <button class="btn btn-danger btn-sm"
                                        @onclick="() => RemoveOne(product.ProductID)"
                                        aria-label="Remove one @product.Name from cart">
                                    Remove One
                                </button>

                                <button class="btn btn-warning btn-sm"
                                        @onclick="() => PromptRemoveAll(product)"
                                        aria-label="Remove all @product.Name from cart">
                                    Remove All
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>

            @if (showConfirmation && productToRemove != null)
            {
                <div class="modal fade show d-block"
                     tabindex="-1"
                     role="dialog"
                     aria-modal="true"
                     aria-labelledby="modal-title"
                     style="background-color: rgba(0,0,0,0.5);">
                    <div class="modal-dialog">
                        <div class="modal-content rounded-3">
                            <div class="modal-header">
                                <h5 id="modal-title" class="modal-title">Confirm Removal</h5>
                                <button type="button" class="btn-close" @onclick="CloseConfirmation" aria-label="Close modal"></button>
                            </div>
                            <div class="modal-body">
                                <p>
                                    @if (isQuantityZeroTriggered)
                                    {
                                        <span>You set the quantity of <strong>@productToRemove.Name</strong> to zero. Do you want to remove it from your cart?</span>
                                    }
                                    else
                                    {
                                        <span>Are you sure you want to remove all instances of <strong>@productToRemove.Name</strong> from your cart?</span>
                                    }
                                </p>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-secondary" @onclick="CloseConfirmation">Cancel</button>
                                <button class="btn btn-danger" @onclick="ConfirmRemoveAll">Remove All</button>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="mt-4 text-end">
                <h5>Total: <span class="text-success fw-bold">$@CartService.CalculateTotal().ToString("0.##")</span></h5>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-warning">
            Please <a href="/Identity/Account/Login">log in</a> to view and manage your cart.
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Product? productToRemove;
    private bool showConfirmation = false;
    private bool isQuantityZeroTriggered = false;

    private void PromptRemoveAll(Product product) {
        productToRemove = product;
        showConfirmation = true;
    }

    private void ConfirmRemoveAll() {
        if (productToRemove != null) {
            CartService.SetProductQuantity(productToRemove.ProductID, 0);
        }
        CloseConfirmation();
    }

    private void CloseConfirmation() {
        productToRemove = null;
        showConfirmation = false;
        isQuantityZeroTriggered = false;
    }

    private void RemoveOne(int productId) {
        CartService.RemoveProduct(productId);
    }

    private void UpdateQuantity(int productId, string? value)
    {
        if (int.TryParse(value, out int quantity))
        {
            if (quantity == 0)
            {
                productToRemove = CartService.CartItems.FirstOrDefault(p => p.ProductID == productId).Product;
                showConfirmation = true;
                isQuantityZeroTriggered = true;
            }
            else if (quantity > 0)
            {
                CartService.SetProductQuantity(productId, quantity);
            }
        }
    }
}